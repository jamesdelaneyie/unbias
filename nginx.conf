# Basic logging and process ID file
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# You can optionally add 'user' and 'worker_processes' directives here if needed,
# but 'events' and 'http' are the main structural ones.
# worker_processes auto; # Example

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Define a map to correctly set the Connection header for WebSocket proxying
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Define an upstream for your Node.js application
    upstream node_app {
        server app:9001; # 'app' is service name, 9001 is internal port
    }

    # Your server block goes INSIDE the http block
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;

        # Location for handling the root path "/"
        location = / {
            error_page 418 = @websocket_proxy;
            if ($http_upgrade ~* "websocket") {
                return 418;
            }
            try_files /index.html =404; # Serve index.html if not WebSocket
        }

        # Named location for WebSocket proxying
        location @websocket_proxy {
            proxy_pass http://node_app; # Forward to your Node.js app
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_read_timeout 86400s; # Optional: for long-lived connections
        }

        # General location for other static assets and SPA routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Optional: Caching rules for assets
        location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2)$ {
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public";
        }

        # Optional: Deny access to hidden files
        location ~ /\. {
            deny all;
        }
    }

    # You can have multiple server blocks here for different domains or ports
}